{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","setState","sortedGoods","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","changeReverseStatus","resetSorterParameters","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,2DAME,WACEC,KAAKC,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,MATlB,iCAaE,WACEG,KAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,iBAfzB,oBAmBE,WAAU,IAAD,OACP,EAGIG,KAAKJ,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAGII,EA5DH,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUD,EACZ,EADYA,WAENO,EAAY,YAAOD,GAqBzB,OAnBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQT,GACN,KAAKL,EAASe,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKd,EAASiB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITd,GACFO,EAAaQ,UAIfC,QAAQC,IAAIhB,EAAUD,GAEfO,EAmCeW,CAAkBrB,EAAiB,CACrDI,WACAD,eAGF,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,iBACT,CACE,WAAYpB,IAAaL,EAASe,WAGxCW,QAAS,WACP,EAAKlB,SAAS,CACZH,SAAUL,EAASe,YAVzB,iCAiBA,wBACES,KAAK,SACLD,UACEE,IAAW,oBACT,CACE,WAAYpB,IAAaL,EAASiB,SAGxCS,QAAS,WACP,EAAKlB,SAAS,CACZH,SAAUL,EAASiB,UAVzB,4BAiBA,wBACEO,KAAK,SACLD,UACEE,IAAW,oBACT,CACE,YAAarB,IAGnBsB,QAAS,WACP,EAAKC,uBATT,sBAgBGtB,IAAaL,EAASM,MAAQF,IAC7B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKE,yBAJT,sBAYN,6BAEInB,EAAYoB,KAAI,SAAAC,GACd,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eApGzB,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.08c70321.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  resetSorterParameters() {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  }\n\n  changeReverseStatus() {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  }\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const sortedGoods = getReorderedGoods(goodsFromServer, {\n      sortType,\n      isReversed,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames('button is-info',\n                {\n                  'is-light': sortType !== SortType.ALPHABET,\n                })\n            }\n            onClick={() => {\n              this.setState({\n                sortType: SortType.ALPHABET,\n              });\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames('button is-success',\n                {\n                  'is-light': sortType !== SortType.LENGTH,\n                })\n            }\n            onClick={() => {\n              this.setState({\n                sortType: SortType.LENGTH,\n              });\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames('button is-warning',\n                {\n                  'is-light': !isReversed,\n                })\n            }\n            onClick={() => {\n              this.changeReverseStatus();\n            }}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== SortType.NONE || isReversed) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  this.resetSorterParameters();\n                }}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n        <ul>\n          {\n            sortedGoods.map(good => {\n              return (\n                <li key={good} data-cy=\"Good\">\n                  {good}\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
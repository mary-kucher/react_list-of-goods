{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","sortedGoods","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAGIC,KAAKJ,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAGIG,EA/CH,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENM,EAAY,YAAOD,GAqBzB,OAnBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITb,GACFM,EAAaQ,UAIfC,QAAQC,IAAIf,EAAUD,GAEfM,EAsBeW,CAAkBpB,EAAiB,CACrDI,WACAD,eAGF,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWjB,IAAaL,EAASc,SAC7B,iBACA,0BACJU,QAAS,WACP,EAAKC,SAAS,CACZpB,SAAUL,EAASc,YAPzB,iCAcA,wBACES,KAAK,SACLD,UAAWjB,IAAaL,EAASgB,OAC7B,oBACA,6BACJQ,QAAS,WACP,EAAKC,SAAS,CACZpB,SAAUL,EAASgB,UAPzB,4BAcA,wBACEO,KAAK,SACLD,UAAWlB,EACP,oBACA,6BACJoB,QAAS,WACP,EAAKC,UAAS,SAAAtB,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAPzB,sBAeGC,IAAaL,EAASM,MAAQF,IAC7B,wBACEmB,KAAK,SACLD,UAAU,4BACVE,QAAS,WACP,EAAKC,SAAS,CACZpB,SAAUL,EAASM,KACnBF,YAAY,KANlB,sBAeN,6BAEII,EAAYkB,KAAI,SAAAC,GACd,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eAnFzB,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1cfde039.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const sortedGoods = getReorderedGoods(goodsFromServer, {\n      sortType,\n      isReversed,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={() => {\n              this.setState({\n                sortType: SortType.ALPHABET,\n              });\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={() => {\n              this.setState({\n                sortType: SortType.LENGTH,\n              });\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={() => {\n              this.setState(state => ({\n                isReversed: !state.isReversed,\n              }));\n            }}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== SortType.NONE || isReversed) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  this.setState({\n                    sortType: SortType.NONE,\n                    isReversed: false,\n                  });\n                }}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n        <ul>\n          {\n            sortedGoods.map(good => {\n              return (\n                <li key={good} data-cy=\"Good\">\n                  {good}\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}